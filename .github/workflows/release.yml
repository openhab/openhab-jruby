name: Release a New Version

on:
  workflow_dispatch:
    inputs:
      version:
        description: "New Version. major|minor|patch|rc or an explicit version number."
        required: true
        default: patch
        type: string
        options:
          - major
          - minor
          - patch
          - rc

env:
  RUBY_VERSION: 3.1.3

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: git-actions/set-user@v1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - name: Bump version
        run: |
          bundle config unset deployment
          ruby -Ilib/openhab/dsl -r version -e 'puts "OLD_VERSION=#{OpenHAB::DSL::VERSION}"' >> $GITHUB_ENV
          bundle exec gem bump -v ${{ inputs.version }} -m "v%{version}" --file lib/openhab/dsl/version.rb
          ruby -Ilib/openhab/dsl -r version -e 'puts "NEW_VERSION=#{OpenHAB::DSL::VERSION}"' >> $GITHUB_ENV
      - name: Generate CHANGELOG
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bin/rake changelog[${{ env.OLD_VERSION }},${{ env.NEW_VERSION }},tmp/new_changes.md]
          git add Gemfile.lock CHANGELOG.md
      - name: Release Gem
        env:
          GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }} 
        run: |
          git commit --amend --no-edit
          bin/rake release
      - name: Create Github Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create v${{ env.NEW_VERSION }} --notes-file tmp/new_changes.md 
